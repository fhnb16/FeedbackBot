<?php
// –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
header('Content-type: text/html; charset=utf-8');
// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
$bot = new Bot();
// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∏—à–µ–¥—à–∏–µ –¥–∞–Ω–Ω—ã–µ
$bot->init('php://input');

/**
 * Class Bot ifeedbackbot
 */
class Bot
{
    // <bot_token> - —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –æ—Ç @BotFather
    private $botToken = ""; // 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11
    // –Ω–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –≤ Telegramm - –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è @userinfobot –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –æ–Ω –≤–∞–º –µ–≥–æ –ø–æ–∫–∞–∂–µ—Ç
    private $adminId = 0000000;
    // –∞–¥—Ä–µ—Å –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Telegram
    private $apiUrl = "https://api.telegram.org/bot";
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    private $helloAdmin = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –°–æ–∑–¥–∞—Ç–µ–ª—å. üôè\n–ù–∞—á–∏–Ω–∞–µ–º –∂–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.";
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    private $helloUser = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å {username}. üëã\n–ú—ã –∂–¥–µ–º –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n------\n–°–ø–∞—Å–∏–±–æ.";
    // –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–∞–ø–∏—à–µ—Ç –±–æ—Ç—É
    private $answerAdmin = "–í—ã–±–µ—Ä–∏—Ç–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º –º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏—é –û—Ç–≤–µ—Ç–∏—Ç—å/Reply –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å\n ";

    private $randomCatURL = "https://api.thecatapi.com/v1/images/search";

    private $stickerPacks = [
                [
                    "text" => "AI Stickers - Part 1",
                    "link" => "https://t.me/addstickers/AiStickersPack",
                    "sticker" => "CAACAgIAAxkBAAJuTmWljUpkX2mzAmYWRIFwfEYwll92AAL6PAACJXDQSCX0QUQnZkltNAQ"
                ],
                [
                    "text" => "AI Stickers - Part 2",
                    "link" => "https://t.me/addstickers/AiStickersPack2",
                    "sticker" => "CAACAgIAAxkBAAJuTGWljP8EtmeFFCJKR9pMBHRSLlH5AAKhPQACleYJSfdQl8v0C7e5NAQ"
                ],
                [
                    "text" => "–ê—Ä—Ç—ã –ü–µ–ø–∞—á–∫–∏",
                    "link" => "https://t.me/addstickers/PepachkaArts",
                    "sticker" => "CAACAgIAAxkBAAJuUGWljVWQl6iGR-wbmxYgJP5iThPoAAIKPAAChqvwSP6jd3zQEUVNNAQ"
                ]
            ];


    /** –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @param $data
     */
    public function init($data)
    {
        // —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ –ø—Ä–∏—à–µ–¥—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç API Telegram
        $arrData = $this->getData($data);
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $chat_id = $arrData['message']['from']['id'];
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ç–æ –Ω–∞–ø–∏—Å–∞–ª: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –∞–¥–º–∏–Ω
        $is_admin = $this->isAdmin($chat_id);
        // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π inline –∫–Ω–æ–ø–æ–∫
        if (isset($arrData['callback_query'])) {
            if($arrData['callback_query']['data'] == "showSupport"){
                $this->displaySupport($arrData);
            }
            if($arrData['callback_query']['data'] == "showCat"){
                $this->displayCat($arrData);
            }
            if($arrData['callback_query']['data'] == "showStickers"){
            	$this->displayStickers($arrData);
            }
        }
        // –µ—Å–ª–∏ —ç—Ç–æ –°—Ç–∞—Ä—Ç
        if($this->isStartBot($arrData)) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫—Ç–æ –Ω–∞–ø–∏—Å–∞–ª
            $chat_id = $is_admin ? $this->adminId : $chat_id;
            // –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
            $hello = $is_admin ? $this->helloAdmin : $this->setTextHello($this->helloUser, $arrData);
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            // —Ñ–æ—Ä–º–∏—Ä—É–µ–º json –¥–ª—è inline –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            $keyboard = [ "inline_keyboard" =>
                [ /* —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ */
                    [
                        [
                            "text" => "–°—Ç–∏–∫–µ—Ä–ø–∞–∫–∏",
                            "callback_data" => "showStickers"
                        ],
                        [
                            "text" => "–†–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ—Ç–∏–∫",
                            "callback_data" => "showCat"
                        ]
                    ],
                    [
                        [
                            "text" => "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å",
                            "callback_data" => "showSupport"
                        ]
                    ]
                ]
            ];
            $keyboard_json = json_encode($keyboard);

            $this->requestToTelegram(array("text" => $hello), $chat_id, "sendMessage");
            $this->requestToTelegram(array("sticker" => "CAACAgIAAxkBAAIB5WWj6MjPeqIZuH8CaALxD8G9KgRgAAKWOwACo33oSNC_B-9StuiSNAQ"), $chat_id, "sendSticker");
            $this->requestToTelegram(array("text" => "–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—é üëΩ", "reply_markup" => $keyboard_json), $chat_id, "sendMessage");
        } elseif($this->isSupportBot($arrData)){
            $this->displaySupport($arrData, $chat_id);
        } elseif($this->isStickersBot($arrData)){
            $this->displayStickers($arrData, $chat_id);
        } elseif($this->isCatBot($arrData)){
            $this->displayCat($arrData, $chat_id);
        } else {
            // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç–∞—Ä—Ç –Ω–µ –∫–æ—Ç –∏ –Ω–µ —Å–∞–ø–ø–æ—Ä—Ç
            if($is_admin)  {
                if($this->isReply($arrData)) {
                    // –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–∞–º–æ–º—É —Å–µ–±–µ
                    if($this->isAdmin($arrData['message']['reply_to_message']['from']['id'])) {
                        $this->requestToTelegram(array("text" => "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ —Å–∞–º–∏ —Å–µ–±–µ. ü§™"), $this->adminId, "sendMessage");
                    } elseif($arrData['message']['reply_to_message']['forward_origin']['type'] == "hidden_user") {
                        // –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç c–∫—Ä—ã—Ç–æ–º—É —é–∑–µ—Ä—É
                        $this->requestToTelegram(array("text" => "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫—Ä—ã–ª —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. ü§°\n–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –µ–≥–æ ID."), $this->adminId, "sendMessage");
                    } elseif($this->isBot($arrData)) {
                        $exploded = explode(":", $arrData['message']['reply_to_message']['text']);
                        if($exploded[0] == "ID") {
                            // –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ–º—É —é–∑–µ—Ä—É ID –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—Å–ª–∞–ª –±–æ—Ç
                            $this->getTypeCommand($arrData, explode(":", $exploded[1]));
                            //$this->requestToTelegram(array("text" => $arrData['message']['text']), $exploded[1], "sendMessage");
                        } else {
                            // –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –±–æ—Ç—É
                            $this->requestToTelegram(array("text" => "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ë–æ—Ç—É. ü§ñ"), $this->adminId, "sendMessage");
                        }
                    } else {
                        // –≤—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
                        $this->getTypeCommand($arrData);
                    }
                } else {
                    // –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∏—Ç—å
                    $this->requestToTelegram(array("text" => $this->answerAdmin), $this->adminId, "sendMessage");
                }
            } else {
                // –ï—Å–ª–∏ —ç—Ç–æ–Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
                $dataSend = array(
                    'from_chat_id' => $arrData['message']['from']['id'],
                    'message_id' => $arrData['message']['message_id'],
                );
                $this->requestToTelegram($dataSend, $this->adminId, "forwardMessage");
                if (!isset($arrData['callback_query'])){
                    $this->requestToTelegram(array("text" => "ID:".$arrData['message']['from']['id']), $this->adminId, "sendMessage");
                }
            }
        }
    }

    /** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ—É –ø–æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
     * @param $data
     * @param $chat_id is empty if called in callback_query
     */
    private function displaySupport($arrData, $chat_id = NULL) {
        $chat_id = $chat_id != NULL ? $chat_id : $arrData['callback_query']['from']['id'];
        $this->requestToTelegram(array("text" => "–õ—É—á—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —ç—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤ –ø–æ–≤—Å—é–¥—É ‚ú®\n–û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –í—ã –≤—Å—ë —Ç–∞–∫–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–µ–Ω—è –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ, —Ç–æ —Ç–æ–≥–¥–∞ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞—é –ø–æ—Ç–æ–º)"), $chat_id, "sendMessage");
        $this->requestToTelegram(array("sticker" => "CAACAgIAAxkBAAIDemWkRIcsYuRYj_G6VAWU1WUP3bBgAAKNOQACyJupSA8_Z3cM36LFNAQ"), $chat_id, "sendSticker");
    }

    /** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∏
     * @param $data
     * @param $chat_id is empty if called in callback_query
     */
    private function displayStickers($arrData, $chat_id = NULL) {
        $chat_id = $chat_id != NULL ? $chat_id : $arrData['callback_query']['from']['id'];

		$list = array();

        foreach($this->stickerPacks as $pack) {
        	array_push($list, array(["text"=>$pack['text'],'url' => $pack['link']]));
        }

        $replyMarkup = array("inline_keyboard" => $list);

        $encodedKeyboard = json_encode($replyMarkup);

        $this->requestToTelegram(array("text" => "–í–æ—Ç –≤—Å–µ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. üò∏\n–í—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –∏–¥–µ—è–º, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å :3", "reply_markup" => $encodedKeyboard), $chat_id, "sendMessage");

        // $this->stickerPacks
        foreach($this->stickerPacks as $pack) {
        	$this->requestToTelegram(array("sticker" => $pack['sticker']), $chat_id, "sendSticker");
        }
    }

    /** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞
     * @param $data
     * @param $chat_id is empty if called in callback_query
     */
    private function displayCat($arrData, $chat_id = NULL) {
        $chat_id = $chat_id != NULL ? $chat_id : $arrData['callback_query']['from']['id'];
        $url = $this->randomCatURL;
        $json = file_get_contents($url);
        $json_data = json_decode($json, true);
        $this->requestToTelegram(array("text" => '<a href="'.$json_data[0]["url"].'">üêà</a>', "parse_mode" => "HTML"), $chat_id, "sendMessage");
    }

    /** –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –ª–∏ –º—ã –±–æ—Ç—É
     * @param $data
     * @return bool
     */
    private function isBot($data) {
        return ($data['message']['reply_to_message']['from']['is_bot'] == 1
            && !array_key_exists('forward_from', $data['message']['reply_to_message']));
    }

    /** –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ Reply
     * @param $data
     * @return bool
     */
    private function isReply($data) {
        return array_key_exists('reply_to_message', $data['message']) ? true : false;
    }

    /** –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param $text
     * @param $data
     * @return mixed
     */
    private function setTextHello($text, $data) {
        // —É–∑–Ω–∞–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        $username = $this->getNameUser($data);
        // –ø–æ–¥–º–µ–Ω—è–µ–º {username} –Ω–∞ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é
        return str_replace("{username}", $username, $text);
    }

    /** –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param $data
     * @return string
     */
    private function getNameUser($data) {
        return $data['message']['chat']['first_name'] . " " . $data['message']['chat']['last_name'];
    }

    /** –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
     * @param $id
     * @return bool
     */
    private function isAdmin($id)
    {
        return ($id == $this->adminId) ? true : false;
    }

    /** –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
     * @param $data
     * @return bool
     */
    private function isStartBot($data) {
        return ($data['message']['text'] == "/start") ? true : false;
    }

    /** –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /support
     * @param $data
     * @return bool
     */
    private function isSupportBot($data) {
        return ($data['message']['text'] == "/support") ? true : false;
    }

    /** –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /cat
     * @param $data
     * @return bool
     */
    private function isCatBot($data) {
        return ($data['message']['text'] == "/cat") ? true : false;
    }
    private function isStickersBot($data) {
        return ($data['message']['text'] == "/stickers") ? true : false;
    }

    /** –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param $data
     */
    private function getTypeCommand($data, $customID = NULL)
    {
        // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        $chat_id = $data['message']['reply_to_message']['forward_from']['id'];

        if (isset($customID)) {
            $chat_id = $customID[0];
        }

        // –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç
        if (array_key_exists('text', $data['message'])) {
            // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
            $dataSend = array(
                'text' => $data['message']['text'],
            );
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º - –ø–µ—Ä–µ–¥–∞–µ–º –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥
            $this->requestToTelegram($dataSend, $chat_id, "sendMessage");
        } elseif (array_key_exists('sticker', $data['message'])) {
            $dataSend = array(
                'sticker' => $data['message']['sticker']['file_id'],
            );
            $this->requestToTelegram($dataSend, $chat_id, "sendSticker");
        } elseif (array_key_exists('document', $data['message'])) {
            $dataSend = array(
                'document' => $data['message']['document']['file_id'],
                'caption' => $data['message']['caption'],
            );
            $this->requestToTelegram($dataSend, $chat_id, "sendDocument");
        } elseif (array_key_exists('photo', $data['message'])) {
            // –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¢–µ–ª–µ–≥—Ä–∞–º —Ä–µ—Å–∞–π–∑–∏—Ç –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã, –º—ã –±–µ—Ä–µ–º —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
            // —Ç–∞–∫ –∫–∞–∫ –æ–Ω —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π - —Ç–æ –µ—Å—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª
            $img_num = count($data['message']['photo']) - 1;
            $dataSend = array(
                'photo' => $data['message']['photo'][$img_num]['file_id'],
                'caption' => $data['message']['caption'],
            );
            $this->requestToTelegram($dataSend, $chat_id, "sendPhoto");
        } elseif (array_key_exists('video', $data['message'])) {
            $dataSend = array(
                'video' => $data['message']['video']['file_id'],
                'caption' => $data['message']['caption'],
            );
            $this->requestToTelegram($dataSend, $chat_id, "sendVideo");
        } else {
            $this->requestToTelegram(array("text" => "–¢–∏–ø –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"), $chat_id, "sendMessage");
        }
    }

    /**
    * –ü–∞—Ä—Å–∏–º —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤
    * @param $data
    * @return mixed
    */
    private function getData($data)
    {
        //$this->setFileLog($data);
        return json_decode(file_get_contents($data), TRUE);
    }

    private function setFileLog($data) {
        $data = json_decode(file_get_contents($data), TRUE);
        $fh = fopen('log.txt', 'a') or die('can\'t open file');
        ((is_array($data)) || (is_object($data))) ? fwrite($fh, print_r($data, TRUE)."\n") : fwrite($fh, $data . "\n");
        fclose($fh);
    }

    /** –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º
     * @param $data
     * @param string $type
     * @return mixed
     */
    private function requestToTelegram($data, $chat_id, $type)
    {
        $result = null;
        $data['chat_id'] = $chat_id;

        if (is_array($data)) {
            $ch = curl_init();
            curl_setopt($ch, CURLOPT_URL, $this->apiUrl . $this->botToken . '/' . $type);
            curl_setopt($ch, CURLOPT_POST, count($data));
            curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
            $result = curl_exec($ch);
            curl_close($ch);
        }
        return $result;
    }

}
?>
